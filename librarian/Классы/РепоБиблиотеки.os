#Использовать gitrunner
#Использовать logos
#Использовать opm
#Использовать fs

Перем ИмяРепозитория;
Перем ЭтоФорк;
Перем ПутьSSH;
Перем ПутьHTTP;
Перем URLДетальнойИнформации;
Перем КаталогРабочейКопии;
Перем Лог;

Процедура НастроитьПоОписанию(Знач ОписаниеРепо) Экспорт

	ИмяРепозитория = ОписаниеРепо.ИмяРепозитория;
	ЭтоФорк = ОписаниеРепо.ЭтоФорк;
	ПутьSSH = ОписаниеРепо.ПутьSSH;
	ПутьHTTP = ОписаниеРепо.ПутьHTTP;
	URLДетальнойИнформации = ОписаниеРепо.URLДетальнойИнформации;

КонецПроцедуры

Процедура УстановитьКаталогРабочейКопии(Знач Каталог) Экспорт
	КаталогРабочейКопии = Каталог;
КонецПроцедуры

Функция ПолучитьКаталогРабочейКопии() Экспорт
	Возврат КаталогРабочейКопии;
КонецФункции // ПолучитьКаталогРабочейКопии()

Функция ПолучитьИмяРепозитория() Экспорт
	Возврат ИмяРепозитория;
КонецФункции

Процедура ПолучитьАктуальныйКод(Знач ИмяВетки) Экспорт

	Лог.Информация(СтрШаблон("Клонирую ветку %1 в %2", ИмяВетки, КаталогРабочейКопии));
	
	ГитМенеджер = Новый ГитРепозиторий();
	ГитМенеджер.УстановитьРабочийКаталог(КаталогРабочейКопии);
	Если НЕ ФС.КаталогСуществует(ОбъединитьПути(КаталогРабочейКопии,".git")) Тогда
		ГитМенеджер.КлонироватьРепозиторий(ПутьHTTP, ".");
		Лог.Информация("Репозиторий успешно склонирован");
	КонецЕсли;

	Лог.Информация("Переход в ветку %1", ИмяВетки);
	ГитМенеджер.ПерейтиВВетку(ИмяВетки);
	ГитМенеджер.Получить();

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Лог = Логирование.ПолучитьЛог("oscript.infrastructure");